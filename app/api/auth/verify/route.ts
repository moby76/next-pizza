//–µ–Ω–¥–ø–æ–∏–Ω—Ç –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ email
import { NextRequest, NextResponse } from 'next/server';
import { prisma } from '@/prisma/prisma-client';

export async function GET (req: NextRequest){

    // * —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç—å —Å–∞–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑ url//ATTENTION - —ç—Ç–æ—Ç –∫–æ–¥/–∑–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω —Ä–∞—Å–ø–æ–ª–∞–≥–∞—Ç—å—Å—è –≤–Ω–µ –±–ª–æ–∫–∞ try/catch !!!
    const code = req.nextUrl.searchParams.get('code')

    try {
        
        // const code = ''

        // ** –µ—Å–ª–∏ –∫–æ–¥–∞ –Ω–µ—Ç –≤ url, –≤–µ—Ä–Ω—ë–º –æ—à–∏–±–∫—É
        if(!code){
            return NextResponse.json({error: '–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'}, {status: 400})
        }

        // *** –µ—Å–ª–∏ –∫–æ–¥ –ø–æ–ª—É—á–µ–Ω, —Ç–æ –Ω–∞—Ö–æ–¥–∏–º –µ–≥–æ –≤ –ë–î
        const verificationCode = await prisma.verificationCode.findFirst({
            where: {
                code
            }
        })
        // **** –µ—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –∫–æ–¥–∞ –Ω–µ—Ç –≤ –ë–î
        if(!verificationCode){
            return NextResponse.json({error: '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥'}, {status: 400}) 
        }

        // ***** –µ—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–æ–¥–æ–º –≤ –ë–î, –Ω–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å —ç—Ç–∏–º –∫–æ–¥–æ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await prisma.user.update({
            where: {
                id: verificationCode.userId
            },
            data: {
                verifiedDate: new Date()
            }
        })

        // ****** –∏ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ –∏–∑ –ë–î, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –Ω–∞–º –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω
        await prisma.verificationCode.delete({
            where: {
                id: verificationCode.id
            }
        }) 

        // ******* –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É. –ß–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä ?verified(???)
        return NextResponse.redirect(new URL('/?verified', req.url))//???

    } catch (error) {
        console.error(error);
        console.log('[VERIFY ERROR] Server error', error);
    }

    // req.nextUrl.searchParams.delete('code') // <-- this is now possible! üéâ
    // return NextResponse.rewrite(req.nextUrl)

}